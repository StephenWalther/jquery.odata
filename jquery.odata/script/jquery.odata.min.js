"use strict"; (function (c) { var i, j, g, d, f = function (k) { return k.replace(/^\/+|\/+$/g, "") }, b = function (k) { return k.replace(/\/+$/g, "") }, a = typeof String.trim === "function" ? String.trim : jQuery.trim, e, h; c = jQuery; i = function (m, k) { var l; l = {}; l.uriParts = c.isPlainObject(m) ? j(m) : j({ root: m }); l.settings = k || {}; if (l.settings.dataType !== undefined && l.settings.dataType === "jsonp") { l.uriParts.options.format = "json" } l.uri = h(l.uriParts); l.from = function (n) { return g.apply(c.extend({}, this), [n]) }; l.query = function (n) { if (c.isFunction(n)) { n = { success: n} } e(this, n) }; l.create = function (q, p, n) { var o; if (c.isFunction(n)) { n = { success: n} } n.type = "POST"; n.data = JSON.stringify(p); o = c.extend(true, {}, this); o.uriParts.resource = q; o.uri = h(o.uriParts); e(o, n) }; l.update = function (s, q, n) { var p, o, r = { partial: true, force: false, etag: null }; if (c.isFunction(n)) { n = { success: n} } if (n.etag === undefined && q.__metadata !== undefined && q.__metadata.etag !== undefined) { n.etag = q.__metadata.etag } o = c.extend({}, r, n); o.type = o.partial ? "MERGE" : "PUT"; if (c.isPlainObject(q)) { o.data = JSON.stringify(q); o.contentType = "application/json" } else { o.data = q.toString(); o.contentType = "text/plain" } p = c.extend(true, {}, this); p.uriParts.resource = s; p.uri = h(p.uriParts); e(p, o) }; l["delete"] = l.deleteEntry = l.remove = function (q, n) { var p, o, r = { force: false, etag: null }; if (c.isFunction(n)) { n = { success: n} } if (n.etag === undefined && q.__metadata !== undefined && q.__metadata.etag !== undefined) { n.etag = q.__metadata.etag } o = c.extend({}, r, n); if (o.force) { o.etag = "*" } o.type = "DELETE"; p = c.extend(true, {}, this); p.uriParts = j(); if (c.isPlainObject(q) && q.__metadata !== undefined && q.__metadata.uri !== undefined) { p.uri = q.__metadata.uri } else { p.uri = q } e(p, o) }; return l }; g = function (m) { var n = this, t, o, w, l, p, q, v, k, s, r, u; w = function (y) { var x; x = c.extend(true, {}, this); x.uriParts.links = y; x.uri = h(x.uriParts); return x }; p = function (x) { var y; y = c.extend(true, {}, this); y.uriParts.options.orderby = x; y.uri = h(y.uriParts); return y }; q = function (y) { var x; x = c.extend(true, {}, this); x.uriParts.options.top = y; x.uri = h(x.uriParts); return x }; v = function (y) { var x; x = c.extend(true, {}, this); x.uriParts.options.skip = y; x.uri = h(x.uriParts); return x }; k = function (x) { var y; y = c.extend(true, {}, this); y.uriParts.options.filter = x; y.uri = h(y.uriParts); return y }; s = function (x) { var y; y = c.extend(true, {}, this); y.uriParts.options.expand = x; y.uri = h(y.uriParts); return y }; r = function (x) { var y; y = c.extend(true, {}, this); y.uriParts.options.select = x; y.uri = h(y.uriParts); return y }; u = function (x) { var y; x = x === undefined ? true : x; y = c.extend(true, {}, this); y.uriParts.options.inlinecount = x; y.uri = h(y.uriParts); return y }; l = function (y) { var x; x = c.extend(true, {}, this); x.uriParts.options.params = y; x.uri = h(x.uriParts); return x }; o = function (z) { var A, x = true, y = z; if (typeof z === "boolean") { x = z } else { if (c.isFunction(z)) { y = { success: z} } } A = c.extend(true, {}, this); A.uriParts.count = true; A.uri = h(A.uriParts); if (x) { A.query(y) } else { return A } }; t = function (z) { var A, x = true, y = z; if (typeof z === "boolean") { x = z } else { if (c.isFunction(z)) { y = { success: z} } } A = c.extend(true, {}, this); A.uriParts.value = true; A.uri = h(A.uriParts); if (x) { A.query(y) } else { return A } }; n.uriParts.resource = m; n.uri = h(n.uriParts); n.value = t; n.count = o; n.params = l; n.orderby = p; n.top = q; n.skip = v; n.filter = k; n.expand = s; n.select = r; n.links = w; n.inlinecount = u; return n }; d = function (m, n, l) { var k = {}; k.data = m.d === undefined ? m : m.d; k.version = n.getResponseHeader("DataServiceVersion").replace(";", ""); k.ETag = n.getResponseHeader("ETag"); k.status = n.status; k.statusText = n.statusText; k.query = l; return k }; j = function (k) { var l; l = { value: false, count: false, options: { inlinecount: false} }; if (k !== undefined) { c.extend(l, k) } return l }; h = function (n) { var m = n.options, o, l = false, q, k = ""; if (n.root === undefined) { return "" } q = n.resource !== undefined ? f(a(n.resource)) : ""; if (n.links !== undefined) { q += "/$links/" + n.links } if (n.count) { q += "/$count" } else { if (n.value) { q += "/$value" } } for (o in m) { if (o !== undefined) { switch (o) { case "params": for (o in m.params) { if (o !== undefined) { if (l) { k += "&" } k += o + "=" + m.params[o]; l = true } } break; case "inlinecount": if (m.inlinecount) { if (l) { k += "&" } k += "$inlinecount=allpages"; l = true; break } break; case "orderby": case "top": case "skip": case "filter": case "expand": case "select": case "skiptoken": if (l) { k += "&" } k += "$" + o + "=" + m[o]; l = true; break; case "format": if (m[o] === "json" && !n.count && !n.value) { if (l) { k += "&" } k += "$format=json" } break } } } return b(a(n.root)) + (q !== "" ? "/" + q : "") + (k !== "" ? "?" + k : "") }; e = function (m, k) { var l, n = { contentType: "application/json", dataType: "json", etag: null, type: "GET" }; l = jQuery.extend({}, n, m.settings, k); l.actualType = l.type === "PUT" || l.type === "DELETE" || l.type === "MERGE" ? "POST" : l.type; if (l.type === "GET" && l.dataType !== "jsonp") { if (m.uri.value) { l.dataType = "*/*" } else { if (m.uri.count) { l.dataType = "text" } } } else { if (l.type === "PUT" || l.type === "DELETE" || l.type === "MERGE") { l.dataType = "*/*" } } if (l.type === "DELETE") { l.dataType = "*/*" } c.ajax({ beforeSend: function (o) { o.setRequestHeader("MaxDataServiceVersion", "2.0"); if (m.uriParts.count || m.uriParts.options.inlinecount || m.uriParts.options.select !== undefined) { o.setRequestHeader("DataServiceVersion", "2.0") } else { o.setRequestHeader("DataServiceVersion", "1.0") } if (l.etag !== null) { o.setRequestHeader("If-Match", l.etag) } if (k.type === "DELETE" || k.type === "PUT" || k.type === "MERGE") { o.setRequestHeader("X-HTTP-Method", k.type) } if (c.isFunction(l.beforeSend)) { l.beforeSend(o) } }, dataFilter: function (p, o) { if (o === "json" || o === "jsonps") { p = JSON.parse(p, function (r, t) { var s, q; if (t !== null) { if (t.toString().indexOf("Date") !== -1) { s = /^\/Date\((-?\d+)([\-|+]\d+)?\)\/$/.exec(t); if (s) { q = new Date(parseInt(s[1], 10)); return q } } return t } }) } return p }, data: l.data, dataType: l.dataType, contentType: l.contentType, password: l.password, username: l.username, timeout: l.timeout, type: l.actualType, processData: false, url: m.uri, success: function (o, q, p) { if (c.isFunction(l.success)) { l.success(d(o, p, m), q, p) } }, complete: l.complete, error: l.error }) }; c.odata = i } (jQuery));